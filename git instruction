# Инструкция для работы с Git и удаленными репозиториями

## Что такое Git?
Git - это одна из реализаций распределенных систем контроля версий, имеющая как и локальные, так и удаленные репозитории. Является самой популярной реализацией систем контроля версий в мире.
## Подготовка репозитория
Для создания репозитория необходимо выполниь команду "git init" в папке с репозиторием и у Вас создастся репозиторий (появится скрытая папка .git)

### Git add
Для добавления изменений в коммит используется команда *git add*. Чтобы использовать команду *git add* напишите *git add <имя файла>*

### Просмотр состояния репозитория
Для того, чтобы посмотреть состояние репозитория используется команда *git status*. Для этого необходимо в папке с репзиторием написать *git status*, и Вы увидите были ли изменения в файлах, или их не было

### Создание коммитов
Для того, чтобы создать коммит (сохранение) необходимо выполнить команду *git commit*. Команда *git commit* берёт все данные, добавленные в индекс с помощью *git add*, и сохраняет их
слепок во внутренней базе данных, а затем сдвигает указатель текущей ветки на этот слепок.

### Git log
Перед переключением версии файла в Git используйте команду *git log*, xтобы увидеть количество сохранений

### Команда git checkout
Для работы нужно указать не только интересующий вас коммит, но и вернуться в тот, где работаем, при помощи команды *git checkout master*

### Команда git diff
Показывает разницу между текущим файлом и сохранённым 

### git rm
Эта команда удаляет указанный файл из рабочей папки, благодаря чему он исчезает из списка неотслеживаемых

### Команда git ignore
Используется в случае, если вы не хотите ни автоматически добавлять в репозиторий, ни видеть в списке неотслеживаемых отдельные файлы

### Просмотр состояния репозитория
Для того, чтобы посмотреть состояние репозитория используется команда *git status*. Для этого необходимо в папке с репзиторием написать *git status*, и Вы увидите были ли изменения в файлах, или их не было
Непосреедственно после клонирования она дает примерно такой результат:
$ git status
On branch master
nohting to commit, working directory clean

